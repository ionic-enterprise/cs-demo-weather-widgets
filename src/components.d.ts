/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';


import {
  ConditionIconPaths,
} from './models/condition-icon-paths';
import {
  Forecast,
} from './models/forecast';


export namespace Components {

  interface CsdemoCondition {
    'bgColor': string;
    'condition': number;
    'iconPaths': ConditionIconPaths;
  }
  interface CsdemoConditionAttributes extends StencilHTMLAttributes {
    'bgColor'?: string;
    'condition'?: number;
    'iconPaths'?: ConditionIconPaths;
  }

  interface CsdemoDailyForecast {
    'forecasts': Array<Forecast>;
    'iconPaths': ConditionIconPaths;
    'scale': string;
  }
  interface CsdemoDailyForecastAttributes extends StencilHTMLAttributes {
    'forecasts'?: Array<Forecast>;
    'iconPaths'?: ConditionIconPaths;
    'scale'?: string;
  }

  interface CsdemoTemperature {
    'scale': string;
    'temperature': number;
  }
  interface CsdemoTemperatureAttributes extends StencilHTMLAttributes {
    'scale'?: string;
    'temperature'?: number;
  }

  interface CsdemoUvIndex {
    'uvIndex': number;
  }
  interface CsdemoUvIndexAttributes extends StencilHTMLAttributes {
    'uvIndex'?: number;
  }
}

declare global {
  interface StencilElementInterfaces {
    'CsdemoCondition': Components.CsdemoCondition;
    'CsdemoDailyForecast': Components.CsdemoDailyForecast;
    'CsdemoTemperature': Components.CsdemoTemperature;
    'CsdemoUvIndex': Components.CsdemoUvIndex;
  }

  interface StencilIntrinsicElements {
    'csdemo-condition': Components.CsdemoConditionAttributes;
    'csdemo-daily-forecast': Components.CsdemoDailyForecastAttributes;
    'csdemo-temperature': Components.CsdemoTemperatureAttributes;
    'csdemo-uv-index': Components.CsdemoUvIndexAttributes;
  }


  interface HTMLCsdemoConditionElement extends Components.CsdemoCondition, HTMLStencilElement {}
  var HTMLCsdemoConditionElement: {
    prototype: HTMLCsdemoConditionElement;
    new (): HTMLCsdemoConditionElement;
  };

  interface HTMLCsdemoDailyForecastElement extends Components.CsdemoDailyForecast, HTMLStencilElement {}
  var HTMLCsdemoDailyForecastElement: {
    prototype: HTMLCsdemoDailyForecastElement;
    new (): HTMLCsdemoDailyForecastElement;
  };

  interface HTMLCsdemoTemperatureElement extends Components.CsdemoTemperature, HTMLStencilElement {}
  var HTMLCsdemoTemperatureElement: {
    prototype: HTMLCsdemoTemperatureElement;
    new (): HTMLCsdemoTemperatureElement;
  };

  interface HTMLCsdemoUvIndexElement extends Components.CsdemoUvIndex, HTMLStencilElement {}
  var HTMLCsdemoUvIndexElement: {
    prototype: HTMLCsdemoUvIndexElement;
    new (): HTMLCsdemoUvIndexElement;
  };

  interface HTMLElementTagNameMap {
    'csdemo-condition': HTMLCsdemoConditionElement
    'csdemo-daily-forecast': HTMLCsdemoDailyForecastElement
    'csdemo-temperature': HTMLCsdemoTemperatureElement
    'csdemo-uv-index': HTMLCsdemoUvIndexElement
  }

  interface ElementTagNameMap {
    'csdemo-condition': HTMLCsdemoConditionElement;
    'csdemo-daily-forecast': HTMLCsdemoDailyForecastElement;
    'csdemo-temperature': HTMLCsdemoTemperatureElement;
    'csdemo-uv-index': HTMLCsdemoUvIndexElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
